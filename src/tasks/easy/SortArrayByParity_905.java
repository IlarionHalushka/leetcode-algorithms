package tasks.easy;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;

class SortArrayByParity_905 {
    public static void main(String[] args) {
        int[] array = new int[]{3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9,3,1,2,4,3,4,1,1,2,3,3,5,6,7,4,3,4,4,5,6,7,8,2,1,2,3,3,3,5,7,8,9};
        long beforeFirst = new Date().getTime();
        System.out.println(Arrays.toString(sortArrayByParity(array)));
        System.out.println(beforeFirst - new Date().getTime());
        long beforeSecond = new Date().getTime();
        System.out.println(Arrays.toString(sortArrayByParity2(array)));
        System.out.println(beforeSecond - new Date().getTime());
    }

    public static int[] sortArrayByParity(int[] A) {
        ArrayList<Integer> result = new ArrayList<>();

        for (int i = 0; i < A.length; i++) {
            if (A[i] % 2 != 0) {
                result.add(A[i]);
            } else {
                result.add(0, A[i]);
            }
        }

        return result.stream().mapToInt(i -> i).toArray();
    }

    public static int[] sortArrayByParity2(int[] A) {
        int i = 0, j = A.length - 1;
        while (i < j) {
            if (A[i] % 2 > A[j] % 2) {
                int tmp = A[i];
                A[i] = A[j];
                A[j] = tmp;
            }

            if (A[i] % 2 == 0) i++;
            if (A[j] % 2 == 1) j--;
        }

        return A;
    }
}